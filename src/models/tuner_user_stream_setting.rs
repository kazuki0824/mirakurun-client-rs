/*
 * Mirakurun
 *
 * DVR Tuner Server for Japanese TV.
 *
 * The version of the OpenAPI document: 3.9.0-rc.2
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct TunerUserStreamSetting {
    #[serde(rename = "channel")]
    pub channel: Box<crate::models::ConfigChannelsItem>,
    #[serde(rename = "networkId", skip_serializing_if = "Option::is_none")]
    pub network_id: Option<i32>,
    #[serde(rename = "serviceId", skip_serializing_if = "Option::is_none")]
    pub service_id: Option<i32>,
    #[serde(rename = "eventId", skip_serializing_if = "Option::is_none")]
    pub event_id: Option<i32>,
    #[serde(rename = "noProvide", skip_serializing_if = "Option::is_none")]
    pub no_provide: Option<bool>,
    #[serde(rename = "parseNIT", skip_serializing_if = "Option::is_none")]
    pub parse_nit: Option<bool>,
    #[serde(rename = "parseSDT", skip_serializing_if = "Option::is_none")]
    pub parse_sdt: Option<bool>,
    #[serde(rename = "parseEIT", skip_serializing_if = "Option::is_none")]
    pub parse_eit: Option<bool>,
}

impl TunerUserStreamSetting {
    pub fn new(channel: crate::models::ConfigChannelsItem) -> TunerUserStreamSetting {
        TunerUserStreamSetting {
            channel: Box::new(channel),
            network_id: None,
            service_id: None,
            event_id: None,
            no_provide: None,
            parse_nit: None,
            parse_sdt: None,
            parse_eit: None,
        }
    }
}


